---
# mongodb headless-service
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  labels:
    app: yolo4
    component: database
spec:
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None
  selector:
    app: yolo4
    component: database
---
# StatefulSet for MongoDB with GCP Storage
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  labels:
    app: yolo4
    component: database
spec:
  serviceName: mongodb-service
  replicas: 1
  selector:
    matchLabels:
      app: yolo4
      component: database
  template:
    metadata:
      labels:
        app: yolo4
        component: database
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mongodb
        image: mongo:5.0.14
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        - name: backup-script
          mountPath: /scripts/backup.sh
          subPath: backup.sh
        - name: backup-script
          mountPath: /etc/cron.d/backup-cron
          subPath: backup-cron
        command:
        - /bin/sh
        - -c
        - |
          # Install cron and gsutil
          apt-get update && apt-get install -y cron python3-pip
          pip3 install gsutil
          
          # Start cron
          chmod 0644 /etc/cron.d/backup-cron
          crontab /etc/cron.d/backup-cron
          service cron start
          
          # Start MongoDB
          exec docker-entrypoint.sh mongod --replSet rs0
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongodb-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongodb-password
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1"
        readinessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
  volumeClaimTemplates:
  - metadata:
      name: mongodb-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "standard"
      resources:
        requests:
          storage: 10Gi
  - metadata:
      name: backup-script
    spec:
      accessModes: ["ReadOnlyMany"]
      storageClassName: "standard"
      resources:
        requests:
          storage: 1Gi
